// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220511120711_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Model.EFModel.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DAL.Model.EFModel.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2bd38c6e-8eca-476a-aebd-d0e02c1c2727"),
                            DateCreated = new DateTime(2022, 5, 11, 12, 7, 10, 835, DateTimeKind.Utc).AddTicks(1566),
                            Name = "Center"
                        },
                        new
                        {
                            Id = new Guid("a9bdc4fd-bd89-4d64-b673-a4bf99e9db34"),
                            DateCreated = new DateTime(2022, 5, 11, 12, 7, 10, 835, DateTimeKind.Utc).AddTicks(1569),
                            Name = "Power Forward"
                        },
                        new
                        {
                            Id = new Guid("7b6f89c2-c8e6-478f-a874-6b164c5ab834"),
                            DateCreated = new DateTime(2022, 5, 11, 12, 7, 10, 835, DateTimeKind.Utc).AddTicks(1585),
                            Name = "Small Forward"
                        },
                        new
                        {
                            Id = new Guid("f2da1ed1-d5ed-41ac-9254-e4bdaaa21c2e"),
                            DateCreated = new DateTime(2022, 5, 11, 12, 7, 10, 835, DateTimeKind.Utc).AddTicks(1587),
                            Name = "Shooting Guard"
                        },
                        new
                        {
                            Id = new Guid("6b2d65b9-ae72-4d34-a821-e399100635c9"),
                            DateCreated = new DateTime(2022, 5, 11, 12, 7, 10, 835, DateTimeKind.Utc).AddTicks(1588),
                            Name = "Point Guard"
                        });
                });

            modelBuilder.Entity("DAL.Model.EFModel.Player", b =>
                {
                    b.HasOne("DAL.Model.EFModel.Position", "Position")
                        .WithMany("Players")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("DAL.Model.EFModel.Position", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
